// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module RegFile(	// @[src/main/scala/npc/core/RegFile.scala:24:7]
  input         clock,	// @[src/main/scala/npc/core/RegFile.scala:24:7]
  input  [3:0]  io_in_ra1,	// @[src/main/scala/npc/core/RegFile.scala:27:18]
                io_in_ra2,	// @[src/main/scala/npc/core/RegFile.scala:27:18]
                io_in_wa,	// @[src/main/scala/npc/core/RegFile.scala:27:18]
  input         io_in_we,	// @[src/main/scala/npc/core/RegFile.scala:27:18]
  input  [31:0] io_in_wd,	// @[src/main/scala/npc/core/RegFile.scala:27:18]
  output [31:0] io_out_rd1,	// @[src/main/scala/npc/core/RegFile.scala:27:18]
                io_out_rd2	// @[src/main/scala/npc/core/RegFile.scala:27:18]
);

  reg [31:0] reg_1;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_2;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_3;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_4;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_5;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_6;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_7;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_8;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_9;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_10;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_11;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_12;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_13;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_14;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] reg_15;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  reg [31:0] casez_tmp;	// @[src/main/scala/npc/core/RegFile.scala:35:45]
  always_comb begin	// @[src/main/scala/npc/core/RegFile.scala:35:45]
    casez (io_in_ra1)	// @[src/main/scala/npc/core/RegFile.scala:35:45]
      4'b0000:
        casez_tmp = 32'h0;	// @[src/main/scala/npc/core/RegFile.scala:29:24, :35:45]
      4'b0001:
        casez_tmp = reg_1;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0010:
        casez_tmp = reg_2;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0011:
        casez_tmp = reg_3;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0100:
        casez_tmp = reg_4;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0101:
        casez_tmp = reg_5;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0110:
        casez_tmp = reg_6;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0111:
        casez_tmp = reg_7;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1000:
        casez_tmp = reg_8;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1001:
        casez_tmp = reg_9;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1010:
        casez_tmp = reg_10;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1011:
        casez_tmp = reg_11;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1100:
        casez_tmp = reg_12;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1101:
        casez_tmp = reg_13;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1110:
        casez_tmp = reg_14;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      default:
        casez_tmp = reg_15;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
    endcase	// @[src/main/scala/npc/core/RegFile.scala:35:45]
  end // always_comb
  reg [31:0] casez_tmp_0;	// @[src/main/scala/npc/core/RegFile.scala:36:45]
  always_comb begin	// @[src/main/scala/npc/core/RegFile.scala:35:45]
    casez (io_in_ra2)	// @[src/main/scala/npc/core/RegFile.scala:35:45]
      4'b0000:
        casez_tmp_0 = 32'h0;	// @[src/main/scala/npc/core/RegFile.scala:29:24, :35:45]
      4'b0001:
        casez_tmp_0 = reg_1;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0010:
        casez_tmp_0 = reg_2;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0011:
        casez_tmp_0 = reg_3;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0100:
        casez_tmp_0 = reg_4;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0101:
        casez_tmp_0 = reg_5;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0110:
        casez_tmp_0 = reg_6;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b0111:
        casez_tmp_0 = reg_7;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1000:
        casez_tmp_0 = reg_8;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1001:
        casez_tmp_0 = reg_9;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1010:
        casez_tmp_0 = reg_10;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1011:
        casez_tmp_0 = reg_11;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1100:
        casez_tmp_0 = reg_12;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1101:
        casez_tmp_0 = reg_13;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      4'b1110:
        casez_tmp_0 = reg_14;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
      default:
        casez_tmp_0 = reg_15;	// @[src/main/scala/npc/core/RegFile.scala:29:65, :35:45]
    endcase	// @[src/main/scala/npc/core/RegFile.scala:35:45]
  end // always_comb
  always @(posedge clock) begin	// @[src/main/scala/npc/core/RegFile.scala:24:7]
    if (io_in_we & io_in_wa == 4'h1)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_1 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'h2)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_2 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'h3)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_3 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'h4)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_4 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'h5)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_5 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'h6)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_6 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'h7)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_7 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'h8)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_8 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'h9)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_9 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'hA)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_10 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'hB)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_11 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'hC)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_12 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'hD)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_13 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & io_in_wa == 4'hE)	// @[src/main/scala/npc/core/RegFile.scala:24:7, :31:{28,40}]
      reg_14 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
    if (io_in_we & (&io_in_wa))	// @[src/main/scala/npc/core/RegFile.scala:31:{28,40}]
      reg_15 <= io_in_wd;	// @[src/main/scala/npc/core/RegFile.scala:29:65]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[src/main/scala/npc/core/RegFile.scala:24:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[src/main/scala/npc/core/RegFile.scala:24:7]
      `FIRRTL_BEFORE_INITIAL	// @[src/main/scala/npc/core/RegFile.scala:24:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:14];	// @[src/main/scala/npc/core/RegFile.scala:24:7]
    initial begin	// @[src/main/scala/npc/core/RegFile.scala:24:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[src/main/scala/npc/core/RegFile.scala:24:7]
        `INIT_RANDOM_PROLOG_	// @[src/main/scala/npc/core/RegFile.scala:24:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[src/main/scala/npc/core/RegFile.scala:24:7]
        for (logic [3:0] i = 4'h0; i < 4'hF; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;	// @[src/main/scala/npc/core/RegFile.scala:24:7]
        end	// @[src/main/scala/npc/core/RegFile.scala:24:7]
        reg_1 = _RANDOM[4'h0];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_2 = _RANDOM[4'h1];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_3 = _RANDOM[4'h2];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_4 = _RANDOM[4'h3];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_5 = _RANDOM[4'h4];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_6 = _RANDOM[4'h5];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_7 = _RANDOM[4'h6];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_8 = _RANDOM[4'h7];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_9 = _RANDOM[4'h8];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_10 = _RANDOM[4'h9];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_11 = _RANDOM[4'hA];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_12 = _RANDOM[4'hB];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_13 = _RANDOM[4'hC];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_14 = _RANDOM[4'hD];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
        reg_15 = _RANDOM[4'hE];	// @[src/main/scala/npc/core/RegFile.scala:24:7, :29:65]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[src/main/scala/npc/core/RegFile.scala:24:7]
      `FIRRTL_AFTER_INITIAL	// @[src/main/scala/npc/core/RegFile.scala:24:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_out_rd1 = casez_tmp;	// @[src/main/scala/npc/core/RegFile.scala:24:7, :35:45]
  assign io_out_rd2 = casez_tmp_0;	// @[src/main/scala/npc/core/RegFile.scala:24:7, :36:45]
endmodule

