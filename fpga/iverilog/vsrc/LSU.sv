// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module LSU(	// @[src/main/scala/npc/core/LSU.scala:68:7]
  input         clock,	// @[src/main/scala/npc/core/LSU.scala:68:7]
                reset,	// @[src/main/scala/npc/core/LSU.scala:68:7]
  output        io_in_ready,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input         io_in_valid,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input  [3:0]  io_in_bits_wa,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input  [31:0] io_in_bits_alu_csr_Out,	// @[src/main/scala/npc/core/LSU.scala:69:14]
                io_in_bits_wdata,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input         io_in_bits_control_regWe,	// @[src/main/scala/npc/core/LSU.scala:69:14]
                io_in_bits_control_wbSrc,	// @[src/main/scala/npc/core/LSU.scala:69:14]
                io_in_bits_control_memRen,	// @[src/main/scala/npc/core/LSU.scala:69:14]
                io_in_bits_control_memWen,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input  [2:0]  io_in_bits_control_memOp,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input         io_in_bits_isEnd,	// @[src/main/scala/npc/core/LSU.scala:69:14]
                io_out_ready,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output        io_out_valid,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output [3:0]  io_out_bits_wa,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output [31:0] io_out_bits_wd,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output        io_out_bits_control_regWe,	// @[src/main/scala/npc/core/LSU.scala:69:14]
                io_out_bits_isEnd,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input         io_master_awready,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output        io_master_awvalid,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output [31:0] io_master_awaddr,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input         io_master_wready,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output        io_master_wvalid,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output [31:0] io_master_wdata,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output [3:0]  io_master_wstrb,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output        io_master_bready,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input         io_master_bvalid,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input  [1:0]  io_master_bresp,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input         io_master_arready,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output        io_master_arvalid,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output [31:0] io_master_araddr,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output        io_master_rready,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input         io_master_rvalid,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input  [1:0]  io_master_rresp,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  input  [31:0] io_master_rdata,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output [3:0]  io_RegFileAccess_wa,	// @[src/main/scala/npc/core/LSU.scala:69:14]
  output        io_RegFileAccess_we	// @[src/main/scala/npc/core/LSU.scala:69:14]
);

  wire        io_out_valid_0;	// @[src/main/scala/npc/core/LSU.scala:149:44]
  wire [6:0]  wmask =
    {3'h0,
     {2{io_in_bits_control_memOp[1]}},
     |{io_in_bits_control_memOp[0], io_in_bits_control_memOp[1]},
     1'h1} << io_in_bits_alu_csr_Out[1:0];	// @[src/main/scala/chisel3/util/pla.scala:90:45, :102:36, :114:{19,36}, src/main/scala/npc/core/LSU.scala:68:7, :89:{26,34}]
  wire [31:0] lshift = io_master_rdata >> {27'h0, io_in_bits_alu_csr_Out[1:0], 3'h0};	// @[src/main/scala/npc/core/LSU.scala:89:{26,34}, :93:33]
  reg         state;	// @[src/main/scala/npc/core/LSU.scala:113:27]
  wire        _io_in_ready_T_1 = io_out_ready & io_out_valid_0;	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/npc/core/LSU.scala:149:44]
  wire        _io_master_arvalid_T = ~state & io_in_valid;	// @[src/main/scala/npc/core/LSU.scala:113:27, :114:26, :125:34]
  wire        io_master_awvalid_0 = _io_master_arvalid_T & io_in_bits_control_memWen;	// @[src/main/scala/npc/core/LSU.scala:125:{34,49}]
  wire        io_master_wvalid_0 = _io_master_arvalid_T & io_in_bits_control_memWen;	// @[src/main/scala/npc/core/LSU.scala:125:34, :132:48]
  wire [62:0] _io_master_wdata_T_2 =
    {31'h0, io_in_bits_wdata} << {58'h0, io_in_bits_alu_csr_Out[1:0], 3'h0};	// @[src/main/scala/npc/core/LSU.scala:89:{26,34}, :133:29]
  wire        io_master_arvalid_0 = _io_master_arvalid_T & io_in_bits_control_memRen;	// @[src/main/scala/npc/core/LSU.scala:125:34, :139:49]
  assign io_out_valid_0 =
    io_in_valid
    & (io_in_bits_control_memRen
         ? io_master_rvalid
         : ~io_in_bits_control_memWen | io_master_bvalid);	// @[src/main/scala/npc/core/LSU.scala:149:{44,50,77}]
  `ifndef SYNTHESIS	// @[src/main/scala/npc/core/LSU.scala:160:11]
    always @(posedge clock) begin	// @[src/main/scala/npc/core/LSU.scala:160:11]
      if (~reset & ~(~(io_master_bvalid & io_out_ready) | io_master_bresp == 2'h0)) begin	// @[src/main/scala/chisel3/util/pla.scala:114:36, src/main/scala/npc/core/LSU.scala:107:33, :160:{11,12,19,38}]
        if (`ASSERT_VERBOSE_COND_)	// @[src/main/scala/npc/core/LSU.scala:160:11]
          $error("Assertion failed\n    at LSU.scala:160 assert(!bfire || io.master.bresp === TransactionResponse.okey.asUInt)\n");	// @[src/main/scala/npc/core/LSU.scala:160:11]
        if (`STOP_COND_)	// @[src/main/scala/npc/core/LSU.scala:160:11]
          $fatal;	// @[src/main/scala/npc/core/LSU.scala:160:11]
      end
      if (~reset & ~(~(io_master_rvalid & io_out_ready) | io_master_rresp == 2'h0)) begin	// @[src/main/scala/chisel3/util/pla.scala:114:36, src/main/scala/npc/core/LSU.scala:109:33, :160:11, :161:{11,12,19,38}]
        if (`ASSERT_VERBOSE_COND_)	// @[src/main/scala/npc/core/LSU.scala:161:11]
          $error("Assertion failed\n    at LSU.scala:161 assert(!rfire || io.master.rresp === TransactionResponse.okey.asUInt)\n");	// @[src/main/scala/npc/core/LSU.scala:161:11]
        if (`STOP_COND_)	// @[src/main/scala/npc/core/LSU.scala:161:11]
          $fatal;	// @[src/main/scala/npc/core/LSU.scala:161:11]
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  always @(posedge clock) begin	// @[src/main/scala/npc/core/LSU.scala:68:7]
    if (reset)	// @[src/main/scala/npc/core/LSU.scala:68:7]
      state <= 1'h0;	// @[src/main/scala/npc/core/LSU.scala:68:7, :113:27]
    else if (state)	// @[src/main/scala/npc/core/LSU.scala:113:27]
      state <= ~_io_in_ready_T_1;	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/chisel3/util/pla.scala:102:36, :114:36, src/main/scala/npc/core/LSU.scala:113:27, :120:23]
    else	// @[src/main/scala/npc/core/LSU.scala:113:27]
      state <=
        (io_in_bits_control_memWen | io_in_bits_control_memRen)
        & (io_master_arvalid_0 & io_master_arready | io_master_awvalid_0
           & io_master_awready & io_master_wvalid_0 & io_master_wready);	// @[src/main/scala/npc/core/LSU.scala:78:23, :108:34, :113:27, :119:{33,44,55}, :125:49, :132:48, :139:49]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[src/main/scala/npc/core/LSU.scala:68:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[src/main/scala/npc/core/LSU.scala:68:7]
      `FIRRTL_BEFORE_INITIAL	// @[src/main/scala/npc/core/LSU.scala:68:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// @[src/main/scala/npc/core/LSU.scala:68:7]
    initial begin	// @[src/main/scala/npc/core/LSU.scala:68:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[src/main/scala/npc/core/LSU.scala:68:7]
        `INIT_RANDOM_PROLOG_	// @[src/main/scala/npc/core/LSU.scala:68:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[src/main/scala/npc/core/LSU.scala:68:7]
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// @[src/main/scala/npc/core/LSU.scala:68:7]
        state = _RANDOM[/*Zero width*/ 1'b0][0];	// @[src/main/scala/npc/core/LSU.scala:68:7, :113:27]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[src/main/scala/npc/core/LSU.scala:68:7]
      `FIRRTL_AFTER_INITIAL	// @[src/main/scala/npc/core/LSU.scala:68:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_ready = ~io_in_valid | _io_in_ready_T_1;	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/npc/core/LSU.scala:68:7, :148:{32,45}]
  assign io_out_valid = io_out_valid_0;	// @[src/main/scala/npc/core/LSU.scala:68:7, :149:44]
  assign io_out_bits_wa = io_in_bits_wa;	// @[src/main/scala/npc/core/LSU.scala:68:7]
  assign io_out_bits_wd =
    io_in_bits_control_wbSrc
      ? (io_in_bits_control_memOp == 3'h1
           ? {{16{lshift[15]}}, lshift[15:0]}
           : io_in_bits_control_memOp == 3'h0
               ? {{24{lshift[7]}}, lshift[7:0]}
               : io_in_bits_control_memOp == 3'h5
                   ? {16'h0, lshift[15:0]}
                   : io_in_bits_control_memOp == 3'h4 ? {24'h0, lshift[7:0]} : lshift)
      : io_in_bits_alu_csr_Out;	// @[src/main/scala/chisel3/util/Mux.scala:126:16, src/main/scala/npc/core/LSU.scala:68:7, :89:26, :93:33, :98:{19,30,36,45}, :99:{19,30,35,44}, :100:35, :101:35, :102:40, :151:35]
  assign io_out_bits_control_regWe = io_in_bits_control_regWe;	// @[src/main/scala/npc/core/LSU.scala:68:7]
  assign io_out_bits_isEnd = io_in_bits_isEnd;	// @[src/main/scala/npc/core/LSU.scala:68:7]
  assign io_master_awvalid = io_master_awvalid_0;	// @[src/main/scala/npc/core/LSU.scala:68:7, :125:49]
  assign io_master_awaddr = io_in_bits_alu_csr_Out;	// @[src/main/scala/npc/core/LSU.scala:68:7]
  assign io_master_wvalid = io_master_wvalid_0;	// @[src/main/scala/npc/core/LSU.scala:68:7, :132:48]
  assign io_master_wdata = _io_master_wdata_T_2[31:0];	// @[src/main/scala/npc/core/LSU.scala:68:7, :133:{20,29}]
  assign io_master_wstrb = wmask[3:0];	// @[src/main/scala/npc/core/LSU.scala:68:7, :89:26, :134:20]
  assign io_master_bready = io_out_ready;	// @[src/main/scala/npc/core/LSU.scala:68:7]
  assign io_master_arvalid = io_master_arvalid_0;	// @[src/main/scala/npc/core/LSU.scala:68:7, :139:49]
  assign io_master_araddr = io_in_bits_alu_csr_Out;	// @[src/main/scala/npc/core/LSU.scala:68:7]
  assign io_master_rready = io_out_ready;	// @[src/main/scala/npc/core/LSU.scala:68:7]
  assign io_RegFileAccess_wa = io_in_bits_wa;	// @[src/main/scala/npc/core/LSU.scala:68:7]
  assign io_RegFileAccess_we = io_in_bits_control_regWe & io_in_valid;	// @[src/main/scala/npc/core/LSU.scala:68:7, :156:49]
endmodule

