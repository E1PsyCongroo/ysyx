// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module CLINT(	// @[src/main/scala/npc/core/CLINT.scala:9:7]
  input         clock,	// @[src/main/scala/npc/core/CLINT.scala:9:7]
                reset,	// @[src/main/scala/npc/core/CLINT.scala:9:7]
  output        io_awready,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  input         io_awvalid,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  output        io_wready,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  input         io_wvalid,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
                io_bready,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  output        io_bvalid,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
                io_arready,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  input         io_arvalid,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  input  [31:0] io_araddr,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  input         io_rready,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  output        io_rvalid,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  output [1:0]  io_rresp,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  output [31:0] io_rdata,	// @[src/main/scala/npc/core/CLINT.scala:10:17]
  output        io_rlast	// @[src/main/scala/npc/core/CLINT.scala:10:17]
);

  reg [63:0] mtime;	// @[src/main/scala/npc/core/CLINT.scala:11:22]
  reg        writeState;	// @[src/main/scala/npc/core/CLINT.scala:23:28]
  reg        readState;	// @[src/main/scala/npc/core/CLINT.scala:27:28]
  reg        readLow;	// @[src/main/scala/npc/core/CLINT.scala:77:25]
  reg        readHigh;	// @[src/main/scala/npc/core/CLINT.scala:78:25]
  always @(posedge clock) begin	// @[src/main/scala/npc/core/CLINT.scala:9:7]
    if (reset) begin	// @[src/main/scala/npc/core/CLINT.scala:9:7]
      mtime <= 64'h0;	// @[src/main/scala/npc/core/CLINT.scala:11:22]
      writeState <= 1'h0;	// @[src/main/scala/npc/core/CLINT.scala:23:28]
      readState <= 1'h0;	// @[src/main/scala/npc/core/CLINT.scala:23:28, :27:28]
    end
    else begin	// @[src/main/scala/npc/core/CLINT.scala:9:7]
      mtime <= mtime + 64'h1;	// @[src/main/scala/npc/core/CLINT.scala:11:22, :12:18]
      if (writeState)	// @[src/main/scala/npc/core/CLINT.scala:23:28]
        writeState <= ~(writeState & io_bready);	// @[src/main/scala/npc/core/CLINT.scala:12:18, :16:26, :23:28, :34:24]
      else	// @[src/main/scala/npc/core/CLINT.scala:23:28]
        writeState <= io_awvalid & ~writeState & io_wvalid;	// @[src/main/scala/npc/core/CLINT.scala:23:28, :24:32, :33:32]
      if (readState)	// @[src/main/scala/npc/core/CLINT.scala:27:28]
        readState <= ~(readState & io_rready);	// @[src/main/scala/npc/core/CLINT.scala:12:18, :18:39, :23:28, :27:28, :41:24]
      else	// @[src/main/scala/npc/core/CLINT.scala:27:28]
        readState <= io_arvalid & ~readState;	// @[src/main/scala/npc/core/CLINT.scala:17:27, :27:28, :28:31]
    end
    readLow <= io_araddr[31:2] == 30'h0;	// @[src/main/scala/npc/core/CLINT.scala:71:{33,49}, :77:{25,42}]
    readHigh <= io_araddr[31:2] == 30'h1;	// @[src/main/scala/npc/core/CLINT.scala:71:33, :78:{25,42}]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[src/main/scala/npc/core/CLINT.scala:9:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[src/main/scala/npc/core/CLINT.scala:9:7]
      `FIRRTL_BEFORE_INITIAL	// @[src/main/scala/npc/core/CLINT.scala:9:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:2];	// @[src/main/scala/npc/core/CLINT.scala:9:7]
    initial begin	// @[src/main/scala/npc/core/CLINT.scala:9:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[src/main/scala/npc/core/CLINT.scala:9:7]
        `INIT_RANDOM_PROLOG_	// @[src/main/scala/npc/core/CLINT.scala:9:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[src/main/scala/npc/core/CLINT.scala:9:7]
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// @[src/main/scala/npc/core/CLINT.scala:9:7]
        end	// @[src/main/scala/npc/core/CLINT.scala:9:7]
        mtime = {_RANDOM[2'h0], _RANDOM[2'h1]};	// @[src/main/scala/npc/core/CLINT.scala:9:7, :11:22]
        writeState = _RANDOM[2'h2][0];	// @[src/main/scala/npc/core/CLINT.scala:9:7, :23:28]
        readState = _RANDOM[2'h2][1];	// @[src/main/scala/npc/core/CLINT.scala:9:7, :23:28, :27:28]
        readLow = _RANDOM[2'h2][2];	// @[src/main/scala/npc/core/CLINT.scala:9:7, :23:28, :77:25]
        readHigh = _RANDOM[2'h2][3];	// @[src/main/scala/npc/core/CLINT.scala:9:7, :23:28, :78:25]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[src/main/scala/npc/core/CLINT.scala:9:7]
      `FIRRTL_AFTER_INITIAL	// @[src/main/scala/npc/core/CLINT.scala:9:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_awready = ~writeState;	// @[src/main/scala/npc/core/CLINT.scala:9:7, :23:28, :24:32]
  assign io_wready = ~writeState;	// @[src/main/scala/npc/core/CLINT.scala:9:7, :23:28, :24:32]
  assign io_bvalid = writeState;	// @[src/main/scala/npc/core/CLINT.scala:9:7, :23:28]
  assign io_arready = ~readState;	// @[src/main/scala/npc/core/CLINT.scala:9:7, :27:28, :28:31]
  assign io_rvalid = readState;	// @[src/main/scala/npc/core/CLINT.scala:9:7, :27:28]
  assign io_rresp = readLow | readHigh ? 2'h0 : 2'h3;	// @[src/main/scala/npc/core/CLINT.scala:9:7, :77:25, :78:25, :86:28, :87:23]
  assign io_rdata =
    readState & readLow ? mtime[31:0] : readState & readHigh ? mtime[63:32] : 32'h0;	// @[src/main/scala/chisel3/util/Mux.scala:126:16, src/main/scala/npc/core/CLINT.scala:9:7, :11:22, :27:28, :77:25, :78:25, :82:{20,40}, :83:{20,41}]
  assign io_rlast = readState;	// @[src/main/scala/npc/core/CLINT.scala:9:7, :27:28]
endmodule

